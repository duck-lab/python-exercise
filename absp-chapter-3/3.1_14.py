#-*-coding:utf-8-*-
# 1. 为什么在程序中加入函数会有好处？
# 函数的主要目的就是将需要多次执行的代码放在一起。
# 这样，在执行代码的时候，不需要把这些代码都复制粘贴一遍
# 同时，在修改代码的时候，也不需要修改所有代码。
# 只修改函数就可以了。

# 2.函数中的代码何时执行：在函数被定义时，还是在函数被调用时？
# 是在函数被调用时

# 3.什么语句创建一个函数？
# def语句用来创建函数

# 4.一个函数和一次函数调用有什么区别？
# 函数包含def语句和在def子句中的代码。函数调用让程序执行转到函数内，
# 函数调用求值为该函数的返回值。

# 5.Python程序中有多少全局作用域？有多少局部作用域？
# python中只有一个全局作用域。有多少个函数，就有多少个局部作用域。

# 6.当函数调用返回时，局部作用域中的变量发生了什么变化？
# 局部作用域中的变量被舍弃，删除

# 7.什么是返回值？返回值可以作为表达式的一部分吗？
# 一般来说，函数调用求值的结果，称为函数的返回值。
# 如果在return语句中使用表达式，那么返回值就是表达式求值的结果。

# 8.如果函数没有返回语句，对他调用的返回值是什么？
# 返回的是None

# 9.如何强制函数中的一个变量指的是全局变量？
# 使用global语句。如：在def子句中，使用 global eggs，将eggs变成全局变量

# 10. None的数据类型是什么？
# None的数据类型是NoneType。他是该数据类型的唯一值。

# 11.import areallyourpetsnamederic 语句做了什么？
# 导入了一个叫areallyourpetsnamederic的模块

# 12.如果在名为spam的模块中，有一个名为bacon()的函数，在引入spam后，如何调用它？
# spam.bacon()

# 13.如何防止程序在遇到错误时崩溃？
# 错误可以由try和except语句来处理。那些可能出错的语句被放在try子句中。如果错误发生，
# 程序执行就转到接下来的except子句开始处。

# 14. try子句中发生了什么？except子句中发生了什么？
# 在try子句中的代码出现问题后，程序执行会直接跳转到except子句
# 而且程序跳转到except语句后，不会回到try子句，而是照常向下执行。

